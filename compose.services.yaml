name: turbo

services:
  turboapi-auth:
    build:
      context: .
      dockerfile: ./Turboapi-auth/Dockerfile
    container_name: turboapi_auth
    ports:
      - "5001:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=auth-db;Port=5432;Database=auth;Username=postgres;Password=yourpassword
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
      - OTEL_SERVICE_NAME=turboapi-auth
      - Kafka__BootstrapServers=kafka:29092
    depends_on:
      auth-db-migration:
        condition: service_completed_successfully
      auth-db:
        condition: service_healthy
      kafka:
        condition: service_healthy
    networks:
      - turbo

  turboapi-geo:
    build:
      context: .
      dockerfile: ./Turboapi-geo/Dockerfile
    container_name: turboapi_geo
    ports:
      - "5002:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=geo-db;Port=5435;Database=geo;Username=postgres;Password=yourpassword
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
      - OTEL_SERVICE_NAME=turboapi-geo
      - Kafka__BootstrapServers=kafka:29092
    depends_on:
      geo-db-migration:
        condition: service_completed_successfully
      geo-db:
        condition: service_healthy
      kafka:
        condition: service_healthy
    networks:
      - turbo

  turboapi-activity:
    build:
      context: .
      dockerfile: ./Turboapi-activity/Dockerfile
    container_name: turboapi_activity
    ports:
      - "5003:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=activity-db;Port=5436;Database=activity;Username=postgres;Password=yourpassword
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
      - OTEL_SERVICE_NAME=turboapi-activity
      - Kafka__BootstrapServers=kafka:29092
    depends_on:
      activity-db-migration:
        condition: service_completed_successfully
      activity-db:
        condition: service_healthy
      kafka:
        condition: service_healthy
    networks:
      - turbo
        
  auth-db-migration:
    image: flyway/flyway:latest
    command: -url=jdbc:postgresql://auth-db:5432/auth -user=postgres -password=yourpassword -locations=filesystem:/flyway/sql -baselineOnMigrate=true migrate
    volumes:
      - ./Turboapi-auth/db/migrations:/flyway/sql
    depends_on:
      auth-db:
        condition: service_healthy
    networks:
      - turbo

  geo-db-migration:
    image: flyway/flyway:latest
    command: -url=jdbc:postgresql://geo-db:5435/geo -user=postgres -password=yourpassword -locations=filesystem:/flyway/sql -baselineOnMigrate=true migrate
    volumes:
      - ./Turboapi-geo/db/migrations:/flyway/sql
    depends_on:
      geo-db:
        condition: service_healthy
    networks:
      - turbo

  activity-db-migration:
    image: flyway/flyway:latest
    command: -url=jdbc:postgresql://activity-db:5436/activity -user=postgres -password=yourpassword -locations=filesystem:/flyway/sql -baselineOnMigrate=true migrate
    volumes:
      - ./Turboapi-activity/db/migrations:/flyway/sql
    depends_on:
      activity-db:
        condition: service_healthy
    networks:
      - turbo