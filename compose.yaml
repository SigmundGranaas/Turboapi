name: turbo

services:
  auth-db:
    image: postgres:17-alpine
    container_name: auth-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: auth
      POSTGRES_PASSWORD: yourpassword
      POSTGRES_USER: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d auth" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - auth_data:/var/lib/postgresql/data
    networks:
      - turbo
  
  geo-db:
    image: postgis/postgis:17-master
    container_name: geo-db
    ports:
      - "5435:5435"
    environment:
      POSTGRES_DB: geo
      POSTGRES_PASSWORD: yourpassword
      POSTGRES_USER: postgres
    volumes:
      - geo_data:/var/lib/postgresql/data
    command: -p 5435
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d geo -p 5435" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - turbo
  
  activity-db:
    image: postgres:17-alpine
    container_name: activity-db
    ports:
      - "5436:5436"
    environment:
      POSTGRES_PASSWORD: yourpassword
      POSTGRES_DB: activity
      POSTGRES_USER: postgres
    volumes:
      - activity_data:/var/lib/postgresql/data
    command: -p 5436
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d activity -p 5436"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - turbo

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    healthcheck:
      test: echo srvr | nc localhost 2181 || exit 1
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - turbo
  
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: [ "CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 15s
    networks:
      - turbo

volumes:
  auth_data:
  geo_data:
  activity_data:

networks:
  turbo:
    driver: bridge