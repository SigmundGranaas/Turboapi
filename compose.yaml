name: turbo

services:
  auth-db:
    image: postgres:17-alpine
    container_name: auth-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: auth
      POSTGRES_PASSWORD: yourpassword
      POSTGRES_USER: postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d auth" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - auth_data:/var/lib/postgresql/data
    networks:
      - turbo
  
  geo-db:
    image: postgis/postgis:17-master
    container_name: geo-db
    ports:
      - "5435:5435"
    environment:
      POSTGRES_DB: geo
      POSTGRES_PASSWORD: yourpassword
      POSTGRES_USER: postgres
    volumes:
      - geo_data:/var/lib/postgresql/data
    command: -p 5435
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d geo -p 5435" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - turbo
  
  activity-db:
    image: postgres:17-alpine
    container_name: activity-db
    ports:
      - "5436:5436"
    environment:
      POSTGRES_PASSWORD: yourpassword
      POSTGRES_DB: activity
      POSTGRES_USER: postgres
    volumes:
      - activity_data:/var/lib/postgresql/data
    command: -p 5436
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d activity -p 5436"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - turbo

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    container_name: kafka
    user: "0"
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_KRAFT_MODE: "true"  # This enables KRaft mode in Kafka.
      KAFKA_PROCESS_ROLES: controller,broker  # Kafka acts as both broker and controller.
      KAFKA_NODE_ID: 1  # A unique ID for this Kafka instance.
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@localhost:9093"  # Defines the controller voters.
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LOG_DIRS: /var/lib/kafka/data  # Where Kafka stores its logs.
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"  # Kafka will automatically create topics if needed.
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1  # Since we’re running one broker, one replica is enough.
      KAFKA_LOG_RETENTION_HOURS: 168  # Keep logs for 7 days.
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0  # No delay for consumer rebalancing.
      CLUSTER_ID: "Mk3OEYBSD34fcwNTJENDM2Qk"  # A unique ID for the Kafka cluster.
    healthcheck:
      test: [ "CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 15s
    networks:
      - turbo

volumes:
  auth_data:
  geo_data:
  activity_data:

networks:
  turbo:
    driver: bridge