name: Build and Publish Docker Images

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [turboapi-auth, turboapi-geo, turboapi-activity]
        include:
          - service: turboapi-auth
            dockerfile: ./Turboapi-auth/Dockerfile
          - service: turboapi-geo
            dockerfile: ./Turboapi-geo/Dockerfile
          - service: turboapi-activity
            dockerfile: ./Turboapi-activity/Dockerfile

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,format=short

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-and-push-migrations:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [auth, geo, activity]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build migration Dockerfile
        run: |
          cat > Dockerfile.migration-${{ matrix.service }} << 'EOF'
          FROM flyway/flyway:latest
          COPY ./Turboapi-${{ matrix.service }}/db/migrations /flyway/sql
          CMD ["-url=jdbc:postgresql://${{ matrix.service }}-db:${{ matrix.service == 'auth' && '5432' || matrix.service == 'geo' && '5435' || '5436' }}/${{ matrix.service }}", "-user=postgres", "-password=yourpassword", "-locations=filesystem:/flyway/sql", "-baselineOnMigrate=true", "migrate"]
          EOF

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/turboapi-${{ matrix.service }}-migration
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,format=short

      - name: Build and push migration Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.migration-${{ matrix.service }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max